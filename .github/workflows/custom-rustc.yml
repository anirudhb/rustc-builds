name: Build custom rustc

# Run this workflow every time a new commit pushed to your repository
on:
  issue_comment:
    types: [created]

jobs:
  custom-rustc:
    # Name the Job
    name: Build custom rustc
    # Set the type of machine to run on
    runs-on: ubuntu-latest
    # Only run on issues
    if: ${{ !github.event.issue.pull_request }}

    steps:
      - name: Validate comment author
        run: |
          [ "$COMMENT_AUTHOR" = "$ISSUE_AUTHOR" ] || exit 5
        env:
          COMMENT_AUTHOR: ${{ github.event.comment.user.login }}
          ISSUE_AUTHOR: ${{ github.event.issue.user.login }}
      - name: Validate and extract comment contents
        id: comment-content
        run: |
          CONTENT="$(echo "$COMMENT_CONTENT" | grep '?builder')"
          [ $? -ne 0 ] && exit 3
          echo "::set-output name=content::$CONTENT"
        env:
          COMMENT_CONTENT: ${{ github.event.comment.body }}
      - name: Retrieve original issue contents
        id: issue-content
        run: |
          CONTENT="$(echo "$ISSUE_CONTENT" | grep '?builder')"
          [ $? -ne 0 ] && exit 3
          echo "::set-output name=content::$CONTENT"
        env:
          ISSUE_CONTENT: ${{ github.event.issue.body }}
      - name: Get PR numbers
        id: pr-numbers
        run: |
          if echo "$COMMENT_COMMAND" | grep -q '?builder prs'; then
            # extract prs from here
            PRS="$(echo "$COMMENT_COMMAND" | sed -re 's/^(\?builder prs )(.*)$/\2/g; t; Q6')"
            [ $? -eq 6 ] && exit 3
          elif echo "$COMMENT_COMMAND" | grep -q '?builder retry'; then
            # extract prs from issue
            PRS="$(echo "$ISSUE_COMMAND" | sed -re 's/^(\?builder prs )(.*)$/\2/g; t; Q6')"
            [ $? -eq 6 ] && exit 3
          else
            echo "INVALID COMMAND IN COMMENT! GOT $COMMENT_COMMAND"
            exit 6
          fi
          echo "::set-output name=numbers::$PRS"
        env:
          COMMENT_COMMAND: ${{ steps.comment-content.outputs.content }}
          ISSUE_COMMAND: ${{ steps.issue-content.outputs.content }}

      - name: Checkout rustc
        uses: actions/checkout@v2
        with:
          repository: rust-lang/rust
          submodules: recursive
      - name: Checkout this repository
        uses: actions/checkout@v2
        with:
          path: rustc-builds
      - name: Set merge identity
        run: |
          git config --global user.name github-actions
          git config --global user.email github-actions@users.noreply.github.com
      - name: Checkout PRs and merge
        run: |
          for PR in $PRS; do
            echo "==> Checking out #$PR"
            STEPS=1
            git fetch --depth=1 origin pull/$PR/head:pr/$PR
            while [ -z $( git merge-base master pr/$PR ) ]; do
              echo "==> Fetching step $STEPS"
              git fetch -q --deepen=10 origin pull/$PR/head:pr/$PR
              (( STEPS += 1 ))
            done
            echo "==> Merging #$PR"
            if git merge pr/$PR; then
              echo "==> Merge success!"
            else
              echo "==> Merge failed"
              exit 5
            fi
          done
        env:
          PRS: ${{ steps.pr-numbers.outputs.numbers }}
      - name: Install packages
        run: |
          sudo apt-get -y install build-essential g++ make cmake python3 ninja-build curl git libssl-dev pkg-config
      - name: Build rustc
        run: |
          cp rustc-builds/config.toml .
          mkdir prefix
          export PREFIX="$PWD/prefix"
          ./x.py build --stage=2 && ./x.py install
      - name: Add comment on issue
        uses: actions-ecosystem/action-create-comment@v1
        with:
          github_token: ${{ secrets.github_token }}
          body: |
            Your custom rustc build with PRs `${{ steps.pr-numbers.outputs.numbers }}` has been created,
            and is available from the artifacts [here](https://github.com/${{ github.repository }}/runs/${{ github.run_id }}).
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: rustc-ubuntu-latest
          path: prefix
